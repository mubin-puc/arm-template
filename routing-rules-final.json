{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",

    //The parameters are defined here !

    "parameters": {
        "vnet_CIDR": { //This is VNET which is to be provisioned using this template
            "type": "string",
            "defaultValue": "10.16.228.0/22"
        },
        "subnet1_CIDR": {
            "type": "string", //Subnet1 of the same VNET
            "defaultValue": "10.16.228.0/23"
        },
        "subnet2_CIDR": { //Subnet3 of the same VNET
            "type": "string",
            "defaultValue": "10.16.230.0/26"
        },
        "subnet3_CIDR": { //Subnet4 of the same VNET
            "type": "string",
            "defaultValue": "10.16.230.64/28"
        },
        "app-name": { //The name of the app which defines the utilization
            "type": "string",
            "defaultValue": "avd"
        },
        "environment": { //The different envrionment are specified be cautious with the allowed values
            "type": "string",
            "allowedValues": [ "prod", "staging", "qa", "dev" ],
            "defaultValue": "qa"
        },
        "region": {
            "type": "string", //The allowed list of regions are specified here 
            "allowedValues": [ "eastus2", "canadacentral", "germanywestcentral", "centralindia", "eastasia" ],
            "defaultValue": "eastus2"

        },
        "firewall IP for default route": { //The Firewall IP should be passed over here
            "type": "string",
            "defaultValue": "192.168.7.8"
        },
        "name of the central vnet for peering": { //This could be hardcoded as it is not going to change
            "type": "string",
            "defaultValue": "vnet-avd-wcg-qa-central"
        },
        "address prefix of central vnet for peering": { //This could also be hardcoded !
            "type": "string",
            "defaultValue": "192.168.0.0/16"
        },
        "name of the regional vnet for peering": { //The regional vnet is what this parameter is asking for 
            "type": "string",
            "defaultValue": "vnet-avd-eus2-qa-regional"
        },
        "address prefix of the regional vnet for peering": { //Ask the user to pass the regional vnet address prefix here
            "type": "string",
            "defaultValue": "172.0.0.0/16"
        },


        // [{ "name":" ","addressPrefix":" "},{"name":" ","addressPrefix":" "}]

        "name and address prefix for routes in subnet1": { //The details should be specified in an array format 
            "type": "array",
            "defaultValue": [
                {
                    "name": "rule1",
                    "addressPrefix": "192.168.0.0/16"
                },
                {
                    "name": "rule2",
                    "addressPrefix": "192.168.0.0/17"
                },
                {
                    "name": "rule3",
                    "addressPrefix": "192.168.0.0/18"
                }
            ]

        },
        "name and address prefix for routes in subnet2": { //The details should be specified in an array format 
            "type": "array",
            "defaultValue": [
                {
                    "name": "rule1",
                    "addressPrefix": "192.168.0.0/16"
                },
                {
                    "name": "rule2",
                    "addressPrefix": "192.168.0.0/17"
                },
                {
                    "name": "rule3",
                    "addressPrefix": "192.168.0.0/18"
                }
            ]

        },
        "name and address prefix for routes in subnet3": { //The details should be specified in an array format 
            "type": "array",
            "defaultValue": [
                {
                    "name": "rule1",
                    "addressPrefix": "192.168.0.0/16"
                },
                {
                    "name": "rule2",
                    "addressPrefix": "192.168.0.0/17"
                },
                {
                    "name": "rule3",
                    "addressPrefix": "192.168.0.0/18"
                }
            ]

        }

    },

    //Multiple Variables are specified overhere concatenation is performed in order to maintain a proper name convention

    "variables": {
        "v-region": "[if(equals(parameters('region'),'eastus2'),'eus2',if(equals(parameters('region'),'centralindia'),'ci',if(equals(parameters('region'),'eastasia'),'ea',if(equals(parameters('region'),'canadacentral'),'ccan',if(equals(parameters('region'),'germanywestcentral'),'wcg','')))))]",
        "vnet": "[concat('vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "snet1": "[concat('snet-001','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "snet2": "[concat('snet-002','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "snet3": "[concat('snet-003','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "nsg_snet1": "[concat('nsg','-','snet-001','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "nsg_snet2": "[concat('nsg','-','snet-002','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "nsg_snet3": "[concat('nsg','-','snet-003','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "rt_snet1": "[concat('rt','-','snet-001','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "rt_snet2": "[concat('rt','-','snet-002','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",
        "rt_snet3": "[concat('rt','-','snet-003','-','vnet','-',parameters('app-name'),'-',variables('v-region'),'-',parameters('environment'))]",

        "tag_costcenter": "AVD-Ops",
        "tag_RCODE": "RO10",

        "route_default": "Default",
        "nextHopType": "VirtualAppliance",

        "vnet_peering_central": "[concat('pr','-',variables('vnet'),'-',parameters('name of the central vnet for peering'))]",
        "vnet_peering_central_dest": "[concat('pr','-',parameters('name of the central vnet for peering'),'-',variables('vnet'))]",
        "vnet_peering_regional": "[concat('pr','-',variables('vnet'),'-',parameters('name of the regional vnet for peering'))]",
        "vnet_peering_regional_dest": "[concat('pr','-',parameters('name of the regional vnet for peering'),'-',variables('vnet'))]"

    },

    //Resources are defined from here 

    "resources": [
        {

            "name": "[variables('vnet')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[parameters('region')]",
            "tags": {
                "costcenter": "[variables('tag_costcenter')]",
                "RCODE": "[variables('tag_RCODE')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsg_snet1'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('rt_snet1'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('rt_snet2'))]",
                "[resourceId('Microsoft.Network/routeTables', variables('rt_snet3'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsg_snet2'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsg_snet3'))]"
            ],


            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnet_CIDR')]"

                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('snet1')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1_CIDR')]",
                            "networkSecurityGroup": { "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsg_snet1'))]" },
                            "routeTable": { "id": "[resourceId('Microsoft.Network/routeTables',variables('rt_snet1'))]" }
                        }

                    },
                    {
                        "name": "[variables('snet2')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2_CIDR')]",
                            "networkSecurityGroup": { "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsg_snet2'))]" },
                            "routeTable": { "id": "[resourceId('Microsoft.Network/routeTables',variables('rt_snet2'))]" }

                        }
                    },

                    {
                        "name": "[variables('snet3')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet3_CIDR')]",
                            "networkSecurityGroup": { "id": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('nsg_snet3'))]" },
                            "routeTable": { "id": "[resourceId('Microsoft.Network/routeTables',variables('rt_snet3'))]" }
                        }

                    }


                ]

            }


        },
        //Multiple NSG's are defined over here which are specified as Id in the subnets defined above 
        {


            "name": "[variables('nsg_snet1')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[parameters('region')]",
            "tags": {
                "costcenter": "[variables('tag_costcenter')]",
                "RCODE": "[variables('tag_RCODE')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "Deny-Storage-In",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "destinationAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "access": "Deny",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [
                                "[parameters('subnet2_CIDR')]",
                                "[parameters('subnet3_CIDR')]"
                            ],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow-SMB-To-Storage",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": [
                                "[parameters('subnet2_CIDR')]",
                                "[parameters('subnet3_CIDR')]"
                            ]
                        }
                    },
                    {
                        "name": "Deny-Any-To-Storage",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "access": "Deny",
                            "priority": 120,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": [
                                "[parameters('subnet2_CIDR')]",
                                "[parameters('subnet3_CIDR')]"
                            ]
                        }
                    },
                    {
                        "name": "AllowICMPOut",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "ICMP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowICMPIn",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "ICMP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }

        },




        {
            "name": "[variables('nsg_snet2')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[parameters('region')]",
            "tags": {
                "costcenter": "[variables('tag_costcenter')]",
                "RCODE": "[variables('tag_RCODE')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-AVD-To-Storage-In",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet2_CIDR')]",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-AVD-To-Storage-In",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet2_CIDR')]",
                            "access": "Deny",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-Any-To-AVD-Out",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet2_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "access": "Deny",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-Netapp-To-Storage-In",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet3_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet2_CIDR')]",
                            "access": "Deny",
                            "priority": 120,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-Any-To-Netapp-Out",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet2_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet3_CIDR')]",
                            "access": "Deny",
                            "priority": 110,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('nsg_snet3')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[parameters('region')]",
            "tags": {
                "costcenter": "[variables('tag_costcenter')]",
                "RCODE": "[variables('tag_RCODE')]"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-AVD-To-Storage-In",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet3_CIDR')]",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-AVD-To-Storage-In",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet3_CIDR')]",
                            "access": "Deny",
                            "priority": 120,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-Any-To-AVD-Out",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet3_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet1_CIDR')]",
                            "access": "Deny",
                            "priority": 110,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-Storage-To-NetApp-In",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet2_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet3_CIDR')]",
                            "access": "Deny",
                            "priority": 130,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Deny-Any-To-Storage-Out",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('subnet3_CIDR')]",
                            "destinationAddressPrefix": "[parameters('subnet2_CIDR')]",
                            "access": "Deny",
                            "priority": 120,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowICMPIn",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "ICMP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowICMPOut",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "ICMP",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },

        //The Route tables are defined here which also utilizes the array based paramater for the dyanmic rules 
        {
            "name": "[variables('rt_snet1')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[parameters('region')]",
            "tags": {
                "costcenter": "[variables('tag_costcenter')]",
                "RCODE": "[variables('tag_RCODE')]"
            },
            "properties": {
                "routes": [
                    {
                       "name": "[concat(variables('rt_snet1'),'-',variables('route_default'))]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewall IP for default route')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {
            "copy": {
                "name": "route_table-rules-subnet1",
                "count": "[length(parameters('name and address prefix for routes in subnet1'))]"
            },
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2020-11-01",
            "dependsOn": ["[resourceId('Microsoft.Network/routeTables', variables('rt_snet1'))]"],
            "name": "[concat(variables('rt_snet1'),'/',variables('rt_snet1'),'-',parameters('name and address prefix for routes in subnet1')[copyIndex('route_table-rules-subnet1')].name)]",
                        "properties": {
                            "addressPrefix": "[parameters('name and address prefix for routes in subnet1')[copyIndex('route_table-rules-subnet1')].addressPrefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewall IP for default route')]"
                        }
        },

        {
            "name": "[variables('rt_snet2')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[parameters('region')]",
            "tags": {
                "costcenter": "[variables('tag_costcenter')]",
                "RCODE": "[variables('tag_RCODE')]"
            },
            
            "properties": {
                "routes": [
                    {
                        "name": "[concat(variables('rt_snet2'),'-',variables('route_default'))]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewall IP for default route')]"
                        }
                    }
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {
            "copy": {
                "name": "route_table-rules-subnet2",
                "count": "[length(parameters('name and address prefix for routes in subnet2'))]"
            },
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2020-11-01",
            "dependsOn": ["[resourceId('Microsoft.Network/routeTables', variables('rt_snet2'))]"],
            "name": "[concat(variables('rt_snet2'),'/',variables('rt_snet2'),'-',parameters('name and address prefix for routes in subnet2')[copyIndex('route_table-rules-subnet2')].name)]",
                        "properties": {
                            "addressPrefix": "[parameters('name and address prefix for routes in subnet2')[copyIndex('route_table-rules-subnet2')].addressPrefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewall IP for default route')]"
                        }

        },
        {
            "name": "[variables('rt_snet3')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[parameters('region')]",
            "tags": {
                "costcenter": "[variables('tag_costcenter')]",
                "RCODE": "[variables('tag_RCODE')]"
            },
            
            "properties": {
                "routes": [
                    {
                        "name": "[concat(variables('rt_snet3'),'-',variables('route_default'))]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewall IP for default route')]"
                        }
                    }
                    
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {

        
        "copy": {
                "name": "route_table-rules-subnet3",
                "count": "[length(parameters('name and address prefix for routes in subnet3'))]"
            },
            "type": "Microsoft.Network/routeTables/routes",
            "apiVersion": "2020-11-01",
            "dependsOn": ["[resourceId('Microsoft.Network/routeTables', variables('rt_snet3'))]"],
            "name": "[concat(variables('rt_snet3'),'/',variables('rt_snet2'),'-',parameters('name and address prefix for routes in subnet3')[copyIndex('route_table-rules-subnet3')].name)]",
                        "properties": {
                            "addressPrefix": "[parameters('name and address prefix for routes in subnet3')[copyIndex('route_table-rules-subnet3')].addressPrefix]",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('firewall IP for default route')]"
                        }

        }
    ]





}
